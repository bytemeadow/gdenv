name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux x86_64
          - os: blaze/ubuntu-22.04-amd64
            target: x86_64-unknown-linux-gnu
            name: gdenv-linux-x86_64
          # Linux ARM64
          - os: blaze/ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: gdenv-linux-aarch64
          # macOS x86_64 (cross-compile on ARM64)
          - os: blaze/macos-latest
            target: x86_64-apple-darwin
            name: gdenv-macos-x86_64
          # macOS ARM64 (native)
          - os: blaze/macos-latest
            target: aarch64-apple-darwin
            name: gdenv-macos-aarch64
          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: gdenv-windows-x86_64.exe

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare binary (Unix)
        if: runner.os != 'Windows'
        run: |
          cp target/${{ matrix.target }}/release/gdenv ${{ matrix.name }}
          strip ${{ matrix.name }} || true

      - name: Prepare binary (Windows)
        if: runner.os == 'Windows'
        run: |
          cp target/${{ matrix.target }}/release/gdenv.exe ${{ matrix.name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release
          for dir in artifacts/*/; do
            if [ -d "$dir" ]; then
              for file in "$dir"*; do
                if [ -f "$file" ]; then
                  cp "$file" release/
                fi
              done
            fi
          done
          ls -la release/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: release/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-install:
    name: Test Installation Script
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [blaze/ubuntu-latest, blaze/macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Test install script syntax
        run: |
          chmod +x install.sh
          sh -n install.sh

      - name: Test actual user experience (curl | sh)
        run: |
          # Test the real command users would run
          curl https://gdenv.bytemeadow.com/ | sh

      - name: Verify installation
        run: |
          # Check if gdenv was installed and works
          if command -v gdenv >/dev/null 2>&1; then
            echo "✅ gdenv installed successfully"
            gdenv --version || gdenv --help
          else
            echo "❌ gdenv not found in PATH"
            exit 1
          fi
